


ARM Macro Assembler    Page 1 


    1 00000000         ;EightBitHistogram_ASM.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         
    4 00000000         ; ------------------------------------------------------
                       -------------------------
    5 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 AREA             DATA, ALIGN = 2
   10 00000000                 EXPORT           IMAGE_SIZE [DATA, SIZE = 16]
   11 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       IMAGE_SIZE
                               SPACE            16
   12 00000010         
   13 00000010                 AREA             |.text|, CODE, READONLY, ALIGN 
= 2
   14 00000000                 EXPORT           EightBitHistogram_ASM
   15 00000000                 EXPORT           IMAGE_SIZE
   16 00000000         ; ------------------------------------------------------
                       -------------------------
   17 00000000         EightBitHistogram_ASM
   18 00000000 FB00 F401       MUL              R4, R0, R1  ; R4 = width * heig
                                                            ht
   19 00000004 F64F 75FF       MOV              R5, #65535
   20 00000008 42AC            CMP              R4, R5
   21 0000000A BF28 2000       MOVHS            R0, #0
   22 0000000E D219            BHS              EightBitHistogram_ASM_end
   23 00000010         
   24 00000010         ; Initialize p_histogram to zero for 256 entries (16-bit
                        each)
   25 00000010 F04F 0600       MOV              R6, #0      ; Initialize to zer
                                                            o
   26 00000014 461F            MOV              R7, R3      ; R7 = p_histogram 
                                                            base address
   27 00000016 F507 7500       ADD              R5, R7, #512 ; R5 = p_histogram
                                                             + 512 bytes (256 *
                                                             16-bit)
   28 0000001A         p_histogram_initialization
   29 0000001A F827 6B02       STRH             R6, [R7], #2 ; Store zero in ea
                                                            ch 16-bit entry, in
                                                            crement address by 
                                                            2
   30 0000001E 42BD            CMP              R5, R7
   31 00000020 D1FB            BNE              p_histogram_initialization
   32 00000022         
   33 00000022         ; Fill the histogram based on p_image values
   34 00000022 F04F 0902       MOV              R9, #2      ; Multiplier for 16
                                                            -bit addressing
   35 00000026 EB02 0704       ADD              R7, R2, R4  ; R7 = p_image + im
                                                            age_size (end of im
                                                            age data)



ARM Macro Assembler    Page 2 


   36 0000002A         p_histogram_completion
   37 0000002A F812 8B01       LDRB             R8, [R2], #1 ; Load 8-bit pixel
                                                             value from p_image
                                                             and increment p_im
                                                            age pointer
   38 0000002E FB08 F809       MUL              R8, R8, R9  ; Calculate offset 
                                                            in p_histogram (R8 
                                                            * 2)
   39 00000032 EB03 0508       ADD              R5, R3, R8  ; R5 = address of h
                                                            istogram entry for 
                                                            pixel value
   40 00000036 882E            LDRH             R6, [R5]    ; Load current hist
                                                            ogram value
   41 00000038 F106 0601       ADD              R6, R6, #1  ; Increment histogr
                                                            am value
   42 0000003C 802E            STRH             R6, [R5]    ; Store incremented
                                                             value back
   43 0000003E 4297            CMP              R7, R2      ; Check if we reach
                                                            ed the end of image
                                                            
   44 00000040 D1F3            BNE              p_histogram_completion
   45 00000042         
   46 00000042         ; Return image size
   47 00000042 4620            MOV              R0, R4      ; Set return value 
                                                            to image size
   48 00000044         
   49 00000044         EightBitHistogram_ASM_end
   50 00000044 4770            BX               LR          ; Return
   51 00000046         
   52 00000046 00 00           ALIGN
   53 00000048                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\eightbithistogram_asm.d -o.\objects\eightbithistog
ram_asm.o -I.\RTE\_EK-TM4C1294XL -IC:\Users\jhcsoares\AppData\Local\Arm\Packs\A
RM\CMSIS\6.0.0\CMSIS\Core\Include -IC:\Users\jhcsoares\AppData\Local\Arm\Packs\
Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" --predef
ine="__UVISION_VERSION SETA 539" --predefine="_RTE_ SETA 1" --predefine="TM4C12
94NCPDT SETA 1" --predefine="_RTE_ SETA 1" --list=.\listings\eightbithistogram_
asm.lst EightBitHistogram_ASM.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 9 in file EightBitHistogram_ASM.s
   Uses
      None
Comment: DATA unused
IMAGE_SIZE 00000000

Symbol: IMAGE_SIZE
   Definitions
      At line 11 in file EightBitHistogram_ASM.s
   Uses
      At line 10 in file EightBitHistogram_ASM.s
      At line 15 in file EightBitHistogram_ASM.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 13 in file EightBitHistogram_ASM.s
   Uses
      None
Comment: .text unused
EightBitHistogram_ASM 00000000

Symbol: EightBitHistogram_ASM
   Definitions
      At line 17 in file EightBitHistogram_ASM.s
   Uses
      At line 14 in file EightBitHistogram_ASM.s
Comment: EightBitHistogram_ASM used once
EightBitHistogram_ASM_end 00000044

Symbol: EightBitHistogram_ASM_end
   Definitions
      At line 49 in file EightBitHistogram_ASM.s
   Uses
      At line 22 in file EightBitHistogram_ASM.s
Comment: EightBitHistogram_ASM_end used once
p_histogram_completion 0000002A

Symbol: p_histogram_completion
   Definitions
      At line 36 in file EightBitHistogram_ASM.s
   Uses
      At line 44 in file EightBitHistogram_ASM.s
Comment: p_histogram_completion used once
p_histogram_initialization 0000001A

Symbol: p_histogram_initialization
   Definitions
      At line 28 in file EightBitHistogram_ASM.s
   Uses
      At line 31 in file EightBitHistogram_ASM.s
Comment: p_histogram_initialization used once
5 symbols
342 symbols in table
